{"ast":null,"code":"import { fetchData, putData, deleteData } from '@/service/apiService';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'CodeResponse_vue',\n  data() {\n    return {\n      codes: [],\n      // Holds the list of error codes\n      updatedCode: {},\n      // Holds the code data for updating\n      updateModalInstance: null,\n      information: [] // Holds the list of sous-catégories\n    };\n  },\n  mounted() {\n    this.fetchCodes();\n    this.fetchSousCategories();\n  },\n  methods: {\n    async fetchCodes() {\n      try {\n        const response = await fetchData('/codes/allCode_view'); // Assuming you have this endpoint set up\n        if (response) {\n          this.codes = response;\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des codes:', error);\n      }\n    },\n    openUpdateModal(code) {\n      this.updatedCode = {\n        id: code[0],\n        code: code[1],\n        details: code[2],\n        sous_categorie: code[3]\n      };\n      const modalElement = document.getElementById('updateModal');\n      this.updateModalInstance = new bootstrap.Modal(modalElement);\n      this.updateModalInstance.show();\n    },\n    async handleUpdate() {\n      try {\n        const response = await putData(`/codes/update_code/${this.updatedCode.id}`, this.updatedCode);\n        if (response) {\n          alert('Code d\\'Erreur mis à jour avec succès !');\n          this.fetchCodes();\n          this.updateModalInstance.hide();\n        }\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour:', error);\n      }\n    },\n    async handleDelete(id) {\n      if (confirm('Voulez-vous vraiment supprimer ce code d\\'erreur ?')) {\n        try {\n          await deleteData(`/codes/delete_code/${id}`);\n          alert('Code d\\'Erreur supprimé avec succès !');\n          this.fetchCodes();\n        } catch (error) {\n          console.error('Erreur lors de la suppression:', error);\n        }\n      }\n    },\n    async fetchSousCategories() {\n      try {\n        const response = await fetchData('/sous_categorie/allSous_categorie');\n        if (response) {\n          this.information = response;\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des sous-catégories:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["fetchData","putData","deleteData","bootstrap","name","data","codes","updatedCode","updateModalInstance","information","mounted","fetchCodes","fetchSousCategories","methods","response","error","console","openUpdateModal","code","id","details","sous_categorie","modalElement","document","getElementById","Modal","show","handleUpdate","alert","hide","handleDelete","confirm"],"sources":["/Users/eva_smartelia/Documents/Clean_Code_Mobilo/src/components/endpoints_menu/reponse/Error_codes.vue"],"sourcesContent":["<template>\n    <div>\n        <!-- Card displaying the error codes list -->\n        <div class=\"card mb-4\">\n            <div class=\"card-header rounded-bottom rounded-4\">\n                <h3 class=\"py-2\">Liste des Codes d'Erreur</h3>\n            </div>\n            <div class=\"card-body\">\n                <blockquote class=\"blockquote mb-0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>Sous-catégorie</th>\n                                <th>Code</th>\n                                <th>Détails</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"code in codes\" :key=\"code[0]\">\n                                <td>{{ code[3] }}</td>\n                                <td>{{ code[1] }}</td>\n                                <td>{{ code[2] }}</td>\n                                <td>\n                                    <button class=\"btn m-2\" @click=\"openUpdateModal(code)\">\n                                        <i class=\"bi bi-pen-fill\"></i>\n                                    </button>\n                                    <button class=\"btn\" @click=\"handleDelete(code[0])\">\n                                        <i class=\"bi bi-file-earmark-x-fill\"></i>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </blockquote>\n            </div>\n        </div>\n\n        <!-- Modal for updating error code data -->\n        <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" aria-labelledby=\"updateModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"updateModalLabel\">Mise à jour du Code d'Erreur</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form @submit.prevent=\"handleUpdate\">\n                            <div class=\"mb-3\">\n                                <label class=\"form-label\">Code :</label>\n                                <input type=\"text\" class=\"form-control\" v-model=\"updatedCode.code\" required />\n                            </div>\n                            <div class=\"mb-3\">\n                                <label class=\"form-label\">Détails :</label>\n                                <textarea class=\"form-control\" v-model=\"updatedCode.details\" required></textarea>\n                            </div>\n                            <div class=\"mb-3\">\n                                <label class=\"form-label\">Sous-catégorie :</label>\n                                <select class=\"form-control\" v-model=\"updatedCode.sous_categorie\" required>\n                                    <option v-for=\"item in information\" :key=\"item.id\" :value=\"item.id\">{{ item.nom }}</option>\n                                </select>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">Mettre à jour</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { fetchData, putData, deleteData } from '@/service/apiService';\nimport * as bootstrap from 'bootstrap';\n\nexport default {\n    name: 'CodeResponse_vue',\n    data() {\n        return {\n            codes: [],  // Holds the list of error codes\n            updatedCode: {},  // Holds the code data for updating\n            updateModalInstance: null,\n            information: [],  // Holds the list of sous-catégories\n        };\n    },\n    mounted() {\n        this.fetchCodes();\n        this.fetchSousCategories();\n    },\n    methods: {\n        async fetchCodes() {\n            try {\n                const response = await fetchData('/codes/allCode_view'); // Assuming you have this endpoint set up\n                if (response) {\n                    this.codes = response;\n                }\n            } catch (error) {\n                console.error('Erreur lors de la récupération des codes:', error);\n            }\n        },\n\n        openUpdateModal(code) {\n            this.updatedCode = {\n                id: code[0],\n                code: code[1],\n                details: code[2],\n                sous_categorie: code[3]\n            };\n            const modalElement = document.getElementById('updateModal');\n            this.updateModalInstance = new bootstrap.Modal(modalElement);\n            this.updateModalInstance.show();\n        },\n\n        async handleUpdate() {\n            try {\n                const response = await putData(`/codes/update_code/${this.updatedCode.id}`, this.updatedCode);\n                if (response) {\n                    alert('Code d\\'Erreur mis à jour avec succès !');\n                    this.fetchCodes();\n                    this.updateModalInstance.hide();\n                }\n            } catch (error) {\n                console.error('Erreur lors de la mise à jour:', error);\n            }\n        },\n\n        async handleDelete(id) {\n            if (confirm('Voulez-vous vraiment supprimer ce code d\\'erreur ?')) {\n                try {\n                    await deleteData(`/codes/delete_code/${id}`);\n                    alert('Code d\\'Erreur supprimé avec succès !');\n                    this.fetchCodes();\n                } catch (error) {\n                    console.error('Erreur lors de la suppression:', error);\n                }\n            }\n        },\n\n        async fetchSousCategories() {\n            try {\n                const response = await fetchData('/sous_categorie/allSous_categorie');\n                if (response) {\n                    this.information = response;\n                }\n            } catch (error) {\n                console.error('Erreur lors de la récupération des sous-catégories:', error);\n            }\n        },\n    }\n}\n</script>\n\n<style scoped>\n.card {\n    border-radius: 15px;\n}\n.card-header {\n    background-color: #022D7E;\n    color: white;\n}\nbutton {\n    background-color: #28aabb;\n    color: white;\n}\n</style>\n"],"mappings":"AAwEA,SAASA,SAAS,EAAEC,OAAO,EAAEC,UAAS,QAAS,sBAAsB;AACrE,OAAO,KAAKC,SAAQ,MAAO,WAAW;AAEtC,eAAe;EACXC,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MAAG;MACZC,WAAW,EAAE,CAAC,CAAC;MAAG;MAClBC,mBAAmB,EAAE,IAAI;MACzBC,WAAW,EAAE,EAAE,CAAG;IACtB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC9B,CAAC;EACDC,OAAO,EAAE;IACL,MAAMF,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAMG,QAAO,GAAI,MAAMd,SAAS,CAAC,qBAAqB,CAAC,EAAE;QACzD,IAAIc,QAAQ,EAAE;UACV,IAAI,CAACR,KAAI,GAAIQ,QAAQ;QACzB;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACrE;IACJ,CAAC;IAEDE,eAAeA,CAACC,IAAI,EAAE;MAClB,IAAI,CAACX,WAAU,GAAI;QACfY,EAAE,EAAED,IAAI,CAAC,CAAC,CAAC;QACXA,IAAI,EAAEA,IAAI,CAAC,CAAC,CAAC;QACbE,OAAO,EAAEF,IAAI,CAAC,CAAC,CAAC;QAChBG,cAAc,EAAEH,IAAI,CAAC,CAAC;MAC1B,CAAC;MACD,MAAMI,YAAW,GAAIC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MAC3D,IAAI,CAAChB,mBAAkB,GAAI,IAAIL,SAAS,CAACsB,KAAK,CAACH,YAAY,CAAC;MAC5D,IAAI,CAACd,mBAAmB,CAACkB,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,MAAMC,YAAYA,CAAA,EAAG;MACjB,IAAI;QACA,MAAMb,QAAO,GAAI,MAAMb,OAAO,CAAC,sBAAsB,IAAI,CAACM,WAAW,CAACY,EAAE,EAAE,EAAE,IAAI,CAACZ,WAAW,CAAC;QAC7F,IAAIO,QAAQ,EAAE;UACVc,KAAK,CAAC,yCAAyC,CAAC;UAChD,IAAI,CAACjB,UAAU,CAAC,CAAC;UACjB,IAAI,CAACH,mBAAmB,CAACqB,IAAI,CAAC,CAAC;QACnC;MACJ,EAAE,OAAOd,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;IAED,MAAMe,YAAYA,CAACX,EAAE,EAAE;MACnB,IAAIY,OAAO,CAAC,oDAAoD,CAAC,EAAE;QAC/D,IAAI;UACA,MAAM7B,UAAU,CAAC,sBAAsBiB,EAAE,EAAE,CAAC;UAC5CS,KAAK,CAAC,uCAAuC,CAAC;UAC9C,IAAI,CAACjB,UAAU,CAAC,CAAC;QACrB,EAAE,OAAOI,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QAC1D;MACJ;IACJ,CAAC;IAED,MAAMH,mBAAmBA,CAAA,EAAG;MACxB,IAAI;QACA,MAAME,QAAO,GAAI,MAAMd,SAAS,CAAC,mCAAmC,CAAC;QACrE,IAAIc,QAAQ,EAAE;UACV,IAAI,CAACL,WAAU,GAAIK,QAAQ;QAC/B;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC/E;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}