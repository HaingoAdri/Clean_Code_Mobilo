{"ast":null,"code":"import { postData } from '../../service/apiService';\nimport Menu from '@/components/Menu.vue';\nimport ConfigurationMenuVue from '@/components/ConfigurationMenu.vue';\nimport Mots_cles from '@/components/configuration_reponse/Mots_cles.vue';\nexport default {\n  name: 'ConfigurationMotsCles',\n  components: {\n    ConfigurationMenuVue,\n    Menu,\n    Mots_cles\n  },\n  data() {\n    return {\n      types: 'm cles',\n      description: ''\n    };\n  },\n  methods: {\n    async saveConfiguration() {\n      postData('/configuration/save_configuration', {\n        types: this.types,\n        description: this.description\n      }).then(response => {\n        console.log(response);\n        window.alert('Insertion avec succès');\n      }).catch(error => {\n        if (error.response) {\n          window.alert(`Erreur ${error.response.status} : ${error.response.data || 'Erreur inconnue'}`);\n        } else {\n          window.alert(`Une erreur est survenue : ${error.message || 'Erreur inconnue'}`);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["postData","Menu","ConfigurationMenuVue","Mots_cles","name","components","data","types","description","methods","saveConfiguration","then","response","console","log","window","alert","catch","error","status","message"],"sources":["/Users/stagiaire_mobilosoft/Documents/Clean_Code_Mobilo/src/views/configuration/ConfigurationMotsCles.vue"],"sourcesContent":["<template>\n    <div class=\"custom-container\">\n        <br>\n        <Menu/>\n        <br>\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <ConfigurationMenuVue/>\n            </div>\n            <div class=\"col-8\">\n                <div class=\"card\" style=\"height:300px;\">\n                    <div class=\"card-body\">\n                        <h3>Gerer la gestion des mots cles ici.</h3>\n                        <hr>\n                        <form class=\"row g-3 py-2\" @submit.prevent=\"saveConfiguration\">\n                            <div class=\"col-12\">\n                                <label for=\"inputAddress2\" class=\"form-label\">Mots clés :</label>\n                                <textarea type=\"text\" v-model=\"description\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Exemple: Publiez vos informations magasin sur Google, Facebook, Waze, Apple Plan, etc ..., gagnez en visibilité et augmentez la fréquentation de vos points de vente.\"></textarea>\n                            </div>\n                            <div class=\"col-12\">\n                                <button type=\"submit\" class=\"btn mt-5\">Enregistrer</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <br>\n        <Mots_cles/>\n    </div>\n</template>\n<script>\nimport { postData } from '../../service/apiService';\nimport Menu from '@/components/Menu.vue';\nimport ConfigurationMenuVue from '@/components/ConfigurationMenu.vue';\nimport Mots_cles from '@/components/configuration_reponse/Mots_cles.vue';\nexport default {\n    name:'ConfigurationMotsCles',\n    components: {\n        ConfigurationMenuVue,\n        Menu,\n        Mots_cles\n    },\n    data() {\n        return {\n            types: 'm cles',\n            description: '',\n        };\n    },\n    methods: {\n        async saveConfiguration() {\n            postData('/configuration/save_configuration', {\n                types: this.types,\n                description: this.description\n            })\n            .then(response => {\n                console.log(response);\n                window.alert('Insertion avec succès');\n            })\n            .catch(error => {\n                if (error.response) {\n                    window.alert(`Erreur ${error.response.status} : ${error.response.data || 'Erreur inconnue'}`);\n                } else {\n                    window.alert(`Une erreur est survenue : ${error.message || 'Erreur inconnue'}`);\n                }\n            });\n        }\n    }\n}\n</script>\n<style scoped>\n.custom-container {\n  max-width: 1600px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n}\n@media (min-width: 576px) {\n  .custom-container {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n}\n\n@media (min-width: 768px) {\n  .custom-container {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n}\n\n@media (min-width: 992px) {\n  .custom-container {\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n}\n\n@media (min-width: 1200px) {\n  .custom-container {\n    padding-left: 48px;\n    padding-right: 48px;\n  }\n}\n\n.card{\n    border-radius:15px;\n}\nbutton{\n    border-radius:10px;\n    background-color: #022D7E;\n    color:white;\n}\n</style>"],"mappings":"AAgCA,SAASA,QAAO,QAAS,0BAA0B;AACnD,OAAOC,IAAG,MAAO,uBAAuB;AACxC,OAAOC,oBAAmB,MAAO,oCAAoC;AACrE,OAAOC,SAAQ,MAAO,kDAAkD;AACxE,eAAe;EACXC,IAAI,EAAC,uBAAuB;EAC5BC,UAAU,EAAE;IACRH,oBAAoB;IACpBD,IAAI;IACJE;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,QAAQ;MACfC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,iBAAiBA,CAAA,EAAG;MACtBV,QAAQ,CAAC,mCAAmC,EAAE;QAC1CO,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,WAAW,EAAE,IAAI,CAACA;MACtB,CAAC,EACAG,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBG,MAAM,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACzC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZ,IAAIA,KAAK,CAACN,QAAQ,EAAE;UAChBG,MAAM,CAACC,KAAK,CAAC,UAAUE,KAAK,CAACN,QAAQ,CAACO,MAAM,MAAMD,KAAK,CAACN,QAAQ,CAACN,IAAG,IAAK,iBAAiB,EAAE,CAAC;QACjG,OAAO;UACHS,MAAM,CAACC,KAAK,CAAC,6BAA6BE,KAAK,CAACE,OAAM,IAAK,iBAAiB,EAAE,CAAC;QACnF;MACJ,CAAC,CAAC;IACN;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}