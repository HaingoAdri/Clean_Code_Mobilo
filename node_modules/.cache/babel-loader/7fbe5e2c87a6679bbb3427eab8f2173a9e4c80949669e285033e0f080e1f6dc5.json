{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport LoginConnexion from '../views/Login.vue';\nimport InscriptionRegister from '../views/Inscription.vue';\nimport DashBoard from '../views/DashBoard.vue';\nimport ConfigurationMeta from '../views/configuration/ConfigurationMeta.vue';\nimport ConfigurationMotsCles from '../views/configuration/ConfigurationMotsCles.vue';\nimport ConfigurationFooter from '../views/configuration/ConfigurationFooter.vue';\nimport ConfigurationLangue from '../views/configuration/ConfigurationLangue.vue';\nimport Information_managment from '../views/information/Redaction_information.vue';\nimport Resultats_managment from '../views/information/Resutlat.vue';\nimport Endpoints_introduction from '../views/endpoints/Introduction_vue.vue';\nimport Endpoints_Categorie from '../views/endpoints/Endpoints_categorie.vue';\nimport Sous_Categorie from '../views/endpoints/Sous_categorie.vue';\nimport Header_vue from '../views/endpoints/Header_vue.vue';\nimport Body_vue from '../views/endpoints/Body_vue.vue';\nconst routes = [{\n  path: '/',\n  name: 'LoginConnexion',\n  component: LoginConnexion,\n  meta: {\n    title: 'Connexion'\n  }\n}, {\n  path: '/s-inscrire',\n  name: 'InscriptionRegister',\n  component: InscriptionRegister,\n  meta: {\n    title: 'Inscription'\n  }\n}, {\n  path: '/dashboard',\n  name: 'DashBoard',\n  component: DashBoard,\n  meta: {\n    title: 'DashBoard',\n    requiresAuth: true\n  }\n}, {\n  path: '/metaConfiguration',\n  name: 'metaConfiguration',\n  component: ConfigurationMeta,\n  meta: {\n    title: 'Configuration description meta',\n    requiresAuth: true\n  }\n}, {\n  path: '/metaMotsCles',\n  name: 'Mots_cles',\n  component: ConfigurationMotsCles,\n  meta: {\n    title: 'Configuration mots cles',\n    requiresAuth: true\n  }\n}, {\n  path: '/footerConfiguration',\n  name: 'footerConfiguration',\n  component: ConfigurationFooter,\n  meta: {\n    title: 'Configuration du footer',\n    requiresAuth: true\n  }\n}, {\n  path: '/langueConfiguration',\n  name: 'langueConfiguration',\n  component: ConfigurationLangue,\n  meta: {\n    title: 'Configuration de langue',\n    requiresAuth: true\n  }\n}, {\n  path: '/information_managment',\n  name: 'informationManagment',\n  component: Information_managment,\n  meta: {\n    title: 'Information editeur',\n    requiresAuth: true\n  }\n}, {\n  path: '/resultat_information',\n  name: 'Resultats_managment',\n  component: Resultats_managment,\n  meta: {\n    title: 'Resultat des informations',\n    requiresAuth: true\n  }\n}, {\n  path: '/endpoints_introduction',\n  name: 'Endpoints_introduction',\n  component: Endpoints_introduction,\n  meta: {\n    title: 'Introduction endpoints',\n    requiresAuth: true\n  }\n}, {\n  path: '/endpoints_Categorie',\n  name: 'Endpoints_Categorie',\n  component: Endpoints_Categorie,\n  meta: {\n    title: 'Categorie endpoints',\n    requiresAuth: true\n  }\n}, {\n  path: '/Sous_Categorie',\n  name: 'Sous_Categorie',\n  component: Sous_Categorie,\n  meta: {\n    title: 'Sous categorie endpoints',\n    requiresAuth: true\n  }\n}, {\n  path: '/Header_vue',\n  name: 'Header_vue',\n  component: Header_vue,\n  meta: {\n    title: 'Query endpoints',\n    requiresAuth: true\n  }\n}, {\n  path: '/Body_vue',\n  name: 'Body_vue',\n  component: Body_vue,\n  meta: {\n    title: 'Body endpoints',\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const defaultTitle = 'Mobilosoft API Configuration';\n  document.title = to.meta.title || defaultTitle;\n  const isAuthenticated = !!localStorage.getItem('user'); // Vérifie si l'utilisateur est connecté\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    // Si la route nécessite une authentification et l'utilisateur n'est pas authentifié, rediriger vers la page de connexion\n    next('/');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginConnexion","InscriptionRegister","DashBoard","ConfigurationMeta","ConfigurationMotsCles","ConfigurationFooter","ConfigurationLangue","Information_managment","Resultats_managment","Endpoints_introduction","Endpoints_Categorie","Sous_Categorie","Header_vue","Body_vue","routes","path","name","component","meta","title","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","defaultTitle","document","isAuthenticated","localStorage","getItem"],"sources":["/Users/stagiaire_mobilosoft/Documents/Clean_Code_Mobilo/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\nimport LoginConnexion from '../views/Login.vue';\nimport InscriptionRegister from '../views/Inscription.vue';\nimport DashBoard from '../views/DashBoard.vue';\nimport ConfigurationMeta from '../views/configuration/ConfigurationMeta.vue';\nimport ConfigurationMotsCles from '../views/configuration/ConfigurationMotsCles.vue';\nimport ConfigurationFooter from '../views/configuration/ConfigurationFooter.vue';\nimport ConfigurationLangue from '../views/configuration/ConfigurationLangue.vue';\nimport Information_managment from '../views/information/Redaction_information.vue';\nimport Resultats_managment from '../views/information/Resutlat.vue';\nimport Endpoints_introduction from '../views/endpoints/Introduction_vue.vue';\nimport Endpoints_Categorie from '../views/endpoints/Endpoints_categorie.vue';\nimport Sous_Categorie from '../views/endpoints/Sous_categorie.vue';\nimport Header_vue from '../views/endpoints/Header_vue.vue';\nimport Body_vue from '../views/endpoints/Body_vue.vue';\n\nconst routes = [\n    {\n        path: '/',\n        name: 'LoginConnexion',\n        component: LoginConnexion,\n        meta: { title: 'Connexion' }\n    },\n    {\n        path: '/s-inscrire',\n        name: 'InscriptionRegister',\n        component: InscriptionRegister,\n        meta: { title: 'Inscription' }\n    },\n    {\n        path: '/dashboard',\n        name: 'DashBoard',\n        component: DashBoard,\n        meta: { title: 'DashBoard', requiresAuth: true }\n    },\n    {\n        path: '/metaConfiguration',\n        name: 'metaConfiguration',\n        component: ConfigurationMeta,\n        meta: { title: 'Configuration description meta', requiresAuth: true }\n    },\n    {\n        path: '/metaMotsCles',\n        name: 'Mots_cles',\n        component: ConfigurationMotsCles,\n        meta: { title: 'Configuration mots cles', requiresAuth: true }\n    },\n    {\n        path: '/footerConfiguration',\n        name: 'footerConfiguration',\n        component: ConfigurationFooter,\n        meta: { title: 'Configuration du footer', requiresAuth: true }\n    },\n    {\n        path: '/langueConfiguration',\n        name: 'langueConfiguration',\n        component: ConfigurationLangue,\n        meta: { title: 'Configuration de langue', requiresAuth: true }\n    },\n    {\n        path: '/information_managment',\n        name: 'informationManagment',\n        component: Information_managment,\n        meta: { title: 'Information editeur', requiresAuth: true }\n    },\n    {\n        path: '/resultat_information',\n        name: 'Resultats_managment',\n        component: Resultats_managment,\n        meta: { title: 'Resultat des informations', requiresAuth: true }\n    },\n    {\n        path: '/endpoints_introduction',\n        name: 'Endpoints_introduction',\n        component: Endpoints_introduction,\n        meta: { title: 'Introduction endpoints', requiresAuth: true }\n    },\n    {\n        path: '/endpoints_Categorie',\n        name: 'Endpoints_Categorie',\n        component: Endpoints_Categorie,\n        meta: { title: 'Categorie endpoints', requiresAuth: true }\n    },\n    {\n        path: '/Sous_Categorie',\n        name: 'Sous_Categorie',\n        component: Sous_Categorie,\n        meta: { title: 'Sous categorie endpoints', requiresAuth: true }\n    },\n    {\n        path: '/Header_vue',\n        name: 'Header_vue',\n        component: Header_vue,\n        meta: { title: 'Query endpoints', requiresAuth: true }\n    },\n    {\n        path: '/Body_vue',\n        name: 'Body_vue',\n        component: Body_vue,\n        meta: { title: 'Body endpoints', requiresAuth: true }\n    }\n];\n\nconst router = createRouter({\n    history: createWebHistory(process.env.BASE_URL),\n    routes\n});\n\nrouter.beforeEach((to, from, next) => {\n    const defaultTitle = 'Mobilosoft API Configuration';\n    document.title = to.meta.title || defaultTitle;\n\n    const isAuthenticated = !!localStorage.getItem('user'); // Vérifie si l'utilisateur est connecté\n    if (to.meta.requiresAuth && !isAuthenticated) {\n        // Si la route nécessite une authentification et l'utilisateur n'est pas authentifié, rediriger vers la page de connexion\n        next('/');\n    } else {\n        next();\n    }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}