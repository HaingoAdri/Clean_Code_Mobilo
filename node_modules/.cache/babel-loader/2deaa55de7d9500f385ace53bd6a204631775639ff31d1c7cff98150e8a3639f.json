{"ast":null,"code":"import { fetchData, putData, deleteData } from '@/service/apiService'; // Import des fonctions PUT et DELETE\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'Endpoints_categorie_vue',\n  data() {\n    return {\n      metaData: null,\n      updatedDescription: '',\n      updateModalInstance: null\n    };\n  },\n  mounted() {\n    this.fetchSearchInformation();\n  },\n  methods: {\n    async fetchSearchInformation() {\n      try {\n        const response = await fetchData(`/endpoints/`);\n        if (response) {\n          this.metaData = response;\n          this.updatedDescription = this.metaData.details; // Préremplir le champ de mise à jour\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données:', error);\n      }\n    },\n    openUpdateModal() {\n      const modalElement = document.getElementById('updateModal');\n      this.updateModalInstance = new bootstrap.Modal(modalElement);\n      this.updateModalInstance.show();\n    },\n    async handleUpdate() {\n      try {\n        const updatedData = {\n          details: this.updatedDescription\n        };\n        await putData(`/information/update_inforamtion/${this.metaData.id}`, updatedData);\n        alert('Description mise à jour avec succès !');\n        this.metaData.details = this.updatedDescription; // Mettre à jour localement après la réussite de l'update\n        this.updateModalInstance.hide(); // Fermer le modal après mise à jour\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour des données:', error);\n      }\n    },\n    // Gestion de la suppression par ID\n    async handleDelete() {\n      if (confirm('Voulez-vous vraiment supprimer cette information ?')) {\n        try {\n          // Utiliser l'ID pour la suppression\n          await deleteData(`/information/delete_information/${this.metaData.id}`);\n          alert('Données supprimées avec succès !');\n          this.metaData = null; // Réinitialiser les données après suppression\n        } catch (error) {\n          console.error('Erreur lors de la suppression des données:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["fetchData","putData","deleteData","bootstrap","name","data","metaData","updatedDescription","updateModalInstance","mounted","fetchSearchInformation","methods","response","details","error","console","openUpdateModal","modalElement","document","getElementById","Modal","show","handleUpdate","updatedData","id","alert","hide","handleDelete","confirm"],"sources":["/Users/eva_smartelia/Documents/Clean_Code_Mobilo/src/components/endpoints_menu/reponse/Endpoints_categorie_reponse.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class=\"card-header rounded-bottom rounded-4\">\n            <h3 class=\"py-2\">Endpoints categorie liste</h3>\n        </div>\n        <div class=\"card-body\">\n            <blockquote class=\"blockquote mb-0\">\n                <table class=\"table table-bordered\">\n                    <thead>\n                        <th>Nom</th>\n                        <th>Description</th>\n                        <th>Action</th>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Français</td>\n                            <td>FR</td>\n                            <td>\n                                <button class=\"btn m-2\"><i class=\"bi bi-pen-fill\"></i></button>\n                                <button class=\"btn\"><i class=\"bi bi-file-earmark-x-fill\"></i></button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </blockquote>\n        </div>\n    </div>\n</template>\n<script>\nimport { fetchData, putData, deleteData } from '@/service/apiService'; // Import des fonctions PUT et DELETE\nimport * as bootstrap from 'bootstrap';\nexport default {\n    name:'Endpoints_categorie_vue',\n    data() {\n        return {\n            metaData: null,\n            updatedDescription: '',\n            updateModalInstance: null,\n        };\n    },\n    mounted() {\n        this.fetchSearchInformation();\n    },\n    methods: {\n        async fetchSearchInformation() {\n            try {\n                const response = await fetchData(`/endpoints/`);\n                if (response) {\n                    this.metaData = response;\n                    this.updatedDescription = this.metaData.details; // Préremplir le champ de mise à jour\n                }\n            } catch (error) {\n                console.error('Erreur lors de la récupération des données:', error);\n            }\n        },\n        \n        openUpdateModal() {\n            const modalElement = document.getElementById('updateModal');\n            this.updateModalInstance = new bootstrap.Modal(modalElement);\n            this.updateModalInstance.show();\n        },\n        \n        async handleUpdate() {\n            try {\n                const updatedData = {\n                    details: this.updatedDescription\n                };\n                await putData(`/information/update_inforamtion/${this.metaData.id}`, updatedData);\n                alert('Description mise à jour avec succès !');\n                this.metaData.details = this.updatedDescription; // Mettre à jour localement après la réussite de l'update\n                this.updateModalInstance.hide(); // Fermer le modal après mise à jour\n            } catch (error) {\n                console.error('Erreur lors de la mise à jour des données:', error);\n            }\n        },\n        \n        // Gestion de la suppression par ID\n        async handleDelete() {\n            if (confirm('Voulez-vous vraiment supprimer cette information ?')) {\n                try {\n                    // Utiliser l'ID pour la suppression\n                    await deleteData(`/information/delete_information/${this.metaData.id}`);\n                    alert('Données supprimées avec succès !');\n                    this.metaData = null; // Réinitialiser les données après suppression\n                } catch (error) {\n                    console.error('Erreur lors de la suppression des données:', error);\n                }\n            }\n        }\n    }\n}\n</script>\n<style scoped>\n.card{\n    border-radius: 15px;\n}\n.card-header{\n    background-color: #022D7E;\n    color:white;\n}\nbutton{\n    background-color: #28aabb;\n    color:white;\n}\n</style>"],"mappings":"AA6BA,SAASA,SAAS,EAAEC,OAAO,EAAEC,UAAS,QAAS,sBAAsB,EAAE;AACvE,OAAO,KAAKC,SAAQ,MAAO,WAAW;AACtC,eAAe;EACXC,IAAI,EAAC,yBAAyB;EAC9BC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,IAAI;MACdC,kBAAkB,EAAE,EAAE;MACtBC,mBAAmB,EAAE;IACzB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,sBAAsB,CAAC,CAAC;EACjC,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,sBAAsBA,CAAA,EAAG;MAC3B,IAAI;QACA,MAAME,QAAO,GAAI,MAAMZ,SAAS,CAAC,aAAa,CAAC;QAC/C,IAAIY,QAAQ,EAAE;UACV,IAAI,CAACN,QAAO,GAAIM,QAAQ;UACxB,IAAI,CAACL,kBAAiB,GAAI,IAAI,CAACD,QAAQ,CAACO,OAAO,EAAE;QACrD;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACvE;IACJ,CAAC;IAEDE,eAAeA,CAAA,EAAG;MACd,MAAMC,YAAW,GAAIC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MAC3D,IAAI,CAACX,mBAAkB,GAAI,IAAIL,SAAS,CAACiB,KAAK,CAACH,YAAY,CAAC;MAC5D,IAAI,CAACT,mBAAmB,CAACa,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,MAAMC,YAAYA,CAAA,EAAG;MACjB,IAAI;QACA,MAAMC,WAAU,GAAI;UAChBV,OAAO,EAAE,IAAI,CAACN;QAClB,CAAC;QACD,MAAMN,OAAO,CAAC,mCAAmC,IAAI,CAACK,QAAQ,CAACkB,EAAE,EAAE,EAAED,WAAW,CAAC;QACjFE,KAAK,CAAC,uCAAuC,CAAC;QAC9C,IAAI,CAACnB,QAAQ,CAACO,OAAM,GAAI,IAAI,CAACN,kBAAkB,EAAE;QACjD,IAAI,CAACC,mBAAmB,CAACkB,IAAI,CAAC,CAAC,EAAE;MACrC,EAAE,OAAOZ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACtE;IACJ,CAAC;IAED;IACA,MAAMa,YAAYA,CAAA,EAAG;MACjB,IAAIC,OAAO,CAAC,oDAAoD,CAAC,EAAE;QAC/D,IAAI;UACA;UACA,MAAM1B,UAAU,CAAC,mCAAmC,IAAI,CAACI,QAAQ,CAACkB,EAAE,EAAE,CAAC;UACvEC,KAAK,CAAC,kCAAkC,CAAC;UACzC,IAAI,CAACnB,QAAO,GAAI,IAAI,EAAE;QAC1B,EAAE,OAAOQ,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;QACtE;MACJ;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}