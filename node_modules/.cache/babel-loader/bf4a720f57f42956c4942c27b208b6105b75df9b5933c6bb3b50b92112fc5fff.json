{"ast":null,"code":"import { postData } from '@/service/apiService';\nexport default {\n  name: 'Meta_descriptionReponse',\n  props: {\n    types: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      metaData: null\n    };\n  },\n  mounted() {\n    this.fetchMetaDescription();\n  },\n  methods: {\n    async fetchMetaDescription() {\n      try {\n        const response = await po.get(`/configuration/search?name=${encodeURIComponent(this.types)}`);\n        if (response.data) {\n          this.metaData = response.data; // Assurez-vous que `response.data` contient un objet avec une `description`\n        }\n      } catch (error) {}\n    }\n  }\n};","map":{"version":3,"names":["postData","name","props","types","type","String","required","data","metaData","mounted","fetchMetaDescription","methods","response","po","get","encodeURIComponent","error"],"sources":["/Users/stagiaire_mobilosoft/Documents/Clean_Code_Mobilo/src/components/configuration_reponse/Meta_descriptionReponse.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class=\"card-header rounded-bottom rounded-4 d-flex justify-content-between\">\n            <h3 class=\"py-2\">Meta description actuelle</h3>\n            <div class=\"a\">\n                <button class=\"btn m-2\"><i class=\"bi bi-pen-fill\"></i></button>\n                <button class=\"btn\"><i class=\"bi bi-file-earmark-x-fill\"></i></button>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <blockquote class=\"blockquote mb-0\">\n                <p>A well-known quote, contained in a blockquote element.</p>\n            </blockquote>\n        </div>\n    </div>\n</template>\n<script>\nimport { postData } from '@/service/apiService';\nexport default {\n    name:'Meta_descriptionReponse',\n    props: {\n        types: {\n            type: String,\n            required: true\n        }\n    },\n    data() {\n        return {\n            metaData: null\n        };\n    },\n    mounted(){\n        this.fetchMetaDescription();\n    },\n    methods: {\n        async fetchMetaDescription() {\n            try {\n                const response = await po.get(`/configuration/search?name=${encodeURIComponent(this.types)}`);\n                if (response.data) {\n                    this.metaData = response.data; // Assurez-vous que `response.data` contient un objet avec une `description`\n                }\n            } catch (error) {\n                \n            }\n        }\n    }\n}\n</script>\n<style scoped>\n.card{\n    border-radius: 15px;\n}\n.card-header{\n    background-color: #022D7E;\n    color:white;\n}\nbutton{\n    background-color: #28aabb;\n    color:white;\n}\n</style>"],"mappings":"AAiBA,SAASA,QAAO,QAAS,sBAAsB;AAC/C,eAAe;EACXC,IAAI,EAAC,yBAAyB;EAC9BC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,oBAAoBA,CAAA,EAAG;MACzB,IAAI;QACA,MAAME,QAAO,GAAI,MAAMC,EAAE,CAACC,GAAG,CAAC,8BAA8BC,kBAAkB,CAAC,IAAI,CAACZ,KAAK,CAAC,EAAE,CAAC;QAC7F,IAAIS,QAAQ,CAACL,IAAI,EAAE;UACf,IAAI,CAACC,QAAO,GAAII,QAAQ,CAACL,IAAI,EAAE;QACnC;MACJ,EAAE,OAAOS,KAAK,EAAE,CAEhB;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}