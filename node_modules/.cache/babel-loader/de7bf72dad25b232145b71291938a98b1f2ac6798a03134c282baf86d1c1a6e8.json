{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"quillEditorIntroduction\",\n  class: \"quill-editor\",\n  style: {\n    \"height\": \"200px\"\n  }\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","style","_createElementBlock","_hoisted_1"],"sources":["/Users/stagiaire_mobilosoft/Documents/mobilosoft_back_office/src/components/information_menu/EditeurQuill.vue"],"sourcesContent":["<template>\n    <div ref=\"quillEditorIntroduction\" class=\"quill-editor\" style=\"height: 200px;\"></div>\n</template>\n\n<script>\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\n\nexport default {\n  name: 'TextEditor',\n  data() {\n    return {\n      quillIntroduction: null,\n      quillGettingStarted: null,\n      quillEnvironments: null,\n      quillFirstStep: null,\n      quillErrorCodes: null,\n      editorContent: {\n      },\n      savedContent: '',\n      savedDate: '',\n      alertMessage: '',\n      alertClass: ''\n    };\n  },\n  mounted() {\n    const sections = ['Introduction', 'GettingStarted', 'Environments', 'FirstStep', 'ErrorCodes'];\n    sections.forEach(section => {\n      this[`quill${section.charAt(0).toUpperCase() + section.slice(1)}`] = new Quill(this.$refs[`quillEditor${section}`], {\n        theme: 'snow',\n        modules: {\n          toolbar: [\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\n            [{ font: [] }],\n            [{ align: [] }],\n            ['bold', 'italic', 'underline', 'strike'],\n            [{ color: [] }, { background: [] }],\n            [{ script: 'sub' }, { script: 'super' }],\n            [{ list: 'ordered' }, { list: 'bullet' }],\n            [{ indent: '-1' }, { indent: '+1' }],\n            [{ direction: 'rtl' }],\n            ['link', 'image', 'video'],\n            ['blockquote', 'code-block'],\n            ['clean'], // remove formatting button\n          ],\n          table: true, // Enable table module\n        },\n      });\n      \n  },\n};\n</script>"],"mappings":";;EACSA,GAAG,EAAC,yBAAyB;EAACC,KAAK,EAAC,cAAc;EAACC,KAAsB,EAAtB;IAAA;EAAA;;;uBAAxDC,mBAAA,CAAqF,OAArFC,UAAqF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}