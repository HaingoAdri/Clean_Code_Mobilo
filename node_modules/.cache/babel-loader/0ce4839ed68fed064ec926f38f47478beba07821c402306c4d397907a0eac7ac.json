{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"card-header rounded-bottom rounded-4 d-flex justify-content-between\"\n};\nconst _hoisted_3 = {\n  class: \"a\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"blockquote mb-0\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  class: \"modal fade\",\n  id: \"updateModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"updateModalLabel\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_9 = {\n  class: \"modal-dialog\"\n};\nconst _hoisted_10 = {\n  class: \"modal-content\"\n};\nconst _hoisted_11 = {\n  class: \"modal-body\"\n};\nconst _hoisted_12 = {\n  class: \"mb-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", {\n    class: \"py-2\"\n  }, \"Introduction de l'endpoint actuelle\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Bouton pour ouvrir le modal de mise à jour \"), _createElementVNode(\"button\", {\n    class: \"btn m-2\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openUpdateModal && $options.openUpdateModal(...args))\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n    class: \"bi bi-pen-fill\"\n  }, null, -1 /* HOISTED */)])), _createCommentVNode(\" Bouton pour la suppression \"), _createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.handleDelete && $options.handleDelete(...args))\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n    class: \"bi bi-file-earmark-x-fill\"\n  }, null, -1 /* HOISTED */)]))])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"blockquote\", _hoisted_5, [$data.metaData ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.metaData.details), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"Aucune description disponible pour ce type.\"))])]), _createCommentVNode(\" Modal pour la mise à jour de la description \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"modal-header\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"modal-title\",\n    id: \"updateModalLabel\"\n  }, \"Mise à jour de la description\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn-close\",\n    \"data-bs-dismiss\": \"modal\",\n    \"aria-label\": \"Close\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.handleUpdate && $options.handleUpdate(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_12, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"description\",\n    class: \"form-label\"\n  }, \"Description :\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.updatedDescription = $event),\n    class: \"form-control\",\n    id: \"description\",\n    rows: \"3\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedDescription]])]), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Mettre à jour\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])])])])]);\n}","map":{"version":3,"names":["class","key","id","tabindex","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createCommentVNode","onClick","_cache","args","$options","openUpdateModal","handleDelete","_hoisted_4","_hoisted_5","$data","metaData","_hoisted_6","_toDisplayString","details","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","type","_hoisted_11","onSubmit","_withModifiers","handleUpdate","_hoisted_12","for","$event","updatedDescription","rows"],"sources":["/Users/eva_smartelia/Documents/Clean_Code_Mobilo/src/components/endpoints_menu/reponse/Introduction_reponse.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class=\"card-header rounded-bottom rounded-4 d-flex justify-content-between\">\n            <h3 class=\"py-2\">Introduction de l'endpoint actuelle</h3>\n            <div class=\"a\">\n                <!-- Bouton pour ouvrir le modal de mise à jour -->\n                <button class=\"btn m-2\" @click=\"openUpdateModal\"><i class=\"bi bi-pen-fill\"></i></button>\n                <!-- Bouton pour la suppression -->\n                <button class=\"btn\" @click=\"handleDelete\"><i class=\"bi bi-file-earmark-x-fill\"></i></button>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <blockquote class=\"blockquote mb-0\">\n                <p v-if=\"metaData\">{{ metaData.details }}</p>\n                <p v-else>Aucune description disponible pour ce type.</p>\n            </blockquote>\n        </div>\n\n        <!-- Modal pour la mise à jour de la description -->\n        <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" aria-labelledby=\"updateModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"updateModalLabel\">Mise à jour de la description</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form @submit.prevent=\"handleUpdate\">\n                            <div class=\"mb-3\">\n                                <label for=\"description\" class=\"form-label\">Description :</label>\n                                <textarea v-model=\"updatedDescription\" class=\"form-control\" id=\"description\" rows=\"3\"></textarea>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">Mettre à jour</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { fetchData, putData, deleteData } from '@/service/apiService'; // Import des fonctions PUT et DELETE\nimport * as bootstrap from 'bootstrap';\n\nexport default {\n    name: 'Introduction_reponse',\n    props: {\n        titre: {\n            type: String,\n            required: true\n        }\n    },\n    data() {\n        return {\n            metaData: null,\n            updatedDescription: '', // Préremplir avec la description actuelle pour la mise à jour\n            updateModalInstance: null, // Stocker l'instance du modal Bootstrap\n        };\n    },\n    mounted() {\n        this.fetchSearchInformation();\n    },\n    methods: {\n        // Récupérer les données par titre (ou un autre critère)\n        async fetchSearchInformation() {\n            try {\n                const response = await fetchData(`/information/search/${encodeURIComponent(this.titre)}`);\n                if (response) {\n                    this.metaData = response;\n                    this.updatedDescription = this.metaData.details; // Préremplir le champ de mise à jour\n                }\n            } catch (error) {\n                console.error('Erreur lors de la récupération des données:', error);\n            }\n        },\n        \n        // Ouvrir le modal de mise à jour\n        openUpdateModal() {\n            const modalElement = document.getElementById('updateModal');\n            this.updateModalInstance = new bootstrap.Modal(modalElement);\n            this.updateModalInstance.show();\n        },\n        \n        // Gestion de la mise à jour par ID\n        async handleUpdate() {\n            try {\n                const updatedData = {\n                    details: this.updatedDescription\n                };\n                // Utiliser l'ID pour la mise à jour\n                await putData(`/information/update_inforamtion/${this.metaData.id}`, updatedData);\n                alert('Description mise à jour avec succès !');\n                this.metaData.details = this.updatedDescription; // Mettre à jour localement après la réussite de l'update\n                this.updateModalInstance.hide(); // Fermer le modal après mise à jour\n            } catch (error) {\n                console.error('Erreur lors de la mise à jour des données:', error);\n            }\n        },\n        \n        // Gestion de la suppression par ID\n        async handleDelete() {\n            if (confirm('Voulez-vous vraiment supprimer cette information ?')) {\n                try {\n                    // Utiliser l'ID pour la suppression\n                    await deleteData(`/information/delete_information/${this.metaData.id}`);\n                    alert('Données supprimées avec succès !');\n                    this.metaData = null; // Réinitialiser les données après suppression\n                } catch (error) {\n                    console.error('Erreur lors de la suppression des données:', error);\n                }\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.card {\n    border-radius: 15px;\n}\n.card-header {\n    background-color: #022D7E;\n    color: white;\n}\nbutton {\n    background-color: #28aabb;\n    color: white;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EACRA,KAAK,EAAC;AAAqE;;EAEvEA,KAAK,EAAC;AAAG;;EAObA,KAAK,EAAC;AAAW;;EACNA,KAAK,EAAC;AAAiB;;EAZ/CC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAmBaD,KAAK,EAAC,YAAY;EAACE,EAAE,EAAC,aAAa;EAACC,QAAQ,EAAC,IAAI;EAAC,iBAAe,EAAC,kBAAkB;EAAC,aAAW,EAAC;;;EAC7FH,KAAK,EAAC;AAAc;;EAChBA,KAAK,EAAC;AAAe;;EAKjBA,KAAK,EAAC;AAAY;;EAEVA,KAAK,EAAC;AAAM;;uBA3BzCI,mBAAA,CAqCM,OArCNC,UAqCM,GApCFC,mBAAA,CAQM,OARNC,UAQM,G,0BAPFD,mBAAA,CAAyD;IAArDN,KAAK,EAAC;EAAM,GAAC,qCAAmC,sBACpDM,mBAAA,CAKM,OALNE,UAKM,GAJFC,mBAAA,gDAAmD,EACnDH,mBAAA,CAAwF;IAAhFN,KAAK,EAAC,SAAS;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;gCAAEN,mBAAA,CAA8B;IAA3BN,KAAK,EAAC;EAAgB,2B,IAC1ES,mBAAA,gCAAmC,EACnCH,mBAAA,CAA4F;IAApFN,KAAK,EAAC,KAAK;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,YAAA,IAAAF,QAAA,CAAAE,YAAA,IAAAH,IAAA,CAAY;gCAAEN,mBAAA,CAAyC;IAAtCN,KAAK,EAAC;EAA2B,2B,QAGtFM,mBAAA,CAKM,OALNU,UAKM,GAJFV,mBAAA,CAGa,cAHbW,UAGa,GAFAC,KAAA,CAAAC,QAAQ,I,cAAjBf,mBAAA,CAA6C,KAb7DgB,UAAA,EAAAC,gBAAA,CAasCH,KAAA,CAAAC,QAAQ,CAACG,OAAO,qB,cACtClB,mBAAA,CAAyD,KAdzEmB,UAAA,EAc0B,6CAA2C,G,KAI7Dd,mBAAA,iDAAoD,EACpDH,mBAAA,CAkBM,OAlBNkB,UAkBM,GAjBFlB,mBAAA,CAgBM,OAhBNmB,UAgBM,GAfFnB,mBAAA,CAcM,OAdNoB,WAcM,G,0BAbFpB,mBAAA,CAGM;IAHDN,KAAK,EAAC;EAAc,IACrBM,mBAAA,CAAgF;IAA5EN,KAAK,EAAC,aAAa;IAACE,EAAE,EAAC;KAAmB,+BAA6B,GAC3EI,mBAAA,CAA4F;IAApFqB,IAAI,EAAC,QAAQ;IAAC3B,KAAK,EAAC,WAAW;IAAC,iBAAe,EAAC,OAAO;IAAC,YAAU,EAAC;2BAE/EM,mBAAA,CAQM,OARNsB,WAQM,GAPFtB,mBAAA,CAMO;IANAuB,QAAM,EAAAlB,MAAA,QAAAA,MAAA,MA3BrCmB,cAAA,KAAAlB,IAAA,KA2B+CC,QAAA,CAAAkB,YAAA,IAAAlB,QAAA,CAAAkB,YAAA,IAAAnB,IAAA,CAAY;MAC/BN,mBAAA,CAGM,OAHN0B,WAGM,G,0BAFF1B,mBAAA,CAAiE;IAA1D2B,GAAG,EAAC,aAAa;IAACjC,KAAK,EAAC;KAAa,eAAa,sB,gBACzDM,mBAAA,CAAiG;IA9BjI,uBAAAK,MAAA,QAAAA,MAAA,MAAAuB,MAAA,IA8BmDhB,KAAA,CAAAiB,kBAAkB,GAAAD,MAAA;IAAElC,KAAK,EAAC,cAAc;IAACE,EAAE,EAAC,aAAa;IAACkC,IAAI,EAAC;iDAA/DlB,KAAA,CAAAiB,kBAAkB,E,+BAEzC7B,mBAAA,CAAoE;IAA5DqB,IAAI,EAAC,QAAQ;IAAC3B,KAAK,EAAC;KAAkB,eAAa,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}