{"ast":null,"code":"import Menu from '@/components/Menu.vue';\nimport Information_menu from '@/components/information_menu/Information_menu.vue';\nimport { fetchData, deleteData, putData } from '@/service/apiService';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'Resultat-information',\n  components: {\n    Information_menu,\n    Menu\n  },\n  data() {\n    return {\n      informations: [],\n      currentItem: null,\n      quillEditorModal: null\n    };\n  },\n  mounted() {\n    this.loadInformations();\n  },\n  methods: {\n    async loadInformations() {\n      try {\n        this.informations = await fetchData('/information/allInformation');\n      } catch (error) {\n        console.error('Erreur lors de la récupération des informations:', error);\n      }\n    },\n    openEditModal(item) {\n      this.currentItem = {\n        ...item\n      };\n      // Initialiser Quill lorsque le modal est ouvert\n      this.$nextTick(() => {\n        if (this.quillEditorModal) {\n          this.quillEditorModal.destroy();\n        }\n        this.quillEditorModal = new Quill(this.$refs.quillEditorModal, {\n          theme: 'snow',\n          modules: {\n            toolbar: [[{\n              header: [1, 2, 3, 4, 5, 6, false]\n            }], [{\n              font: []\n            }], [{\n              align: []\n            }], ['bold', 'italic', 'underline', 'strike'], [{\n              color: []\n            }, {\n              background: []\n            }], [{\n              script: 'sub'\n            }, {\n              script: 'super'\n            }], [{\n              list: 'ordered'\n            }, {\n              list: 'bullet'\n            }], [{\n              indent: '-1'\n            }, {\n              indent: '+1'\n            }], [{\n              direction: 'rtl'\n            }], ['link', 'image', 'video'], ['blockquote', 'code-block'], ['clean'] // remove formatting button\n            ],\n            table: true // Enable table module\n          }\n        });\n        // Charger le contenu dans l'éditeur\n        this.quillEditorModal.root.innerHTML = this.currentItem.details;\n        // Afficher le modal\n        const modal = new bootstrap.Modal(document.getElementById('editModal'));\n        modal.show();\n      });\n    },\n    async updateInformation() {\n      try {\n        const updatedDetails = this.quillEditorModal.root.innerHTML;\n        await putData(`/information/allInformation/${this.currentItem.id}`, {\n          titre: this.currentItem.titre,\n          details: updatedDetails\n        });\n        // Recharger les informations et fermer le modal\n        this.loadInformations();\n        const modal = bootstrap.Modal.getInstance(document.getElementById('editModal'));\n        modal.hide();\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour des informations:', error);\n      }\n    },\n    async deleteItem(id) {\n      try {\n        await deleteData(`/information/d/${id}`);\n        this.loadInformations();\n      } catch (error) {\n        console.error('Erreur lors de la suppression des informations:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Menu","Information_menu","fetchData","deleteData","putData","Quill","bootstrap","name","components","data","informations","currentItem","quillEditorModal","mounted","loadInformations","methods","error","console","openEditModal","item","$nextTick","destroy","$refs","theme","modules","toolbar","header","font","align","color","background","script","list","indent","direction","table","root","innerHTML","details","modal","Modal","document","getElementById","show","updateInformation","updatedDetails","id","titre","getInstance","hide","deleteItem"],"sources":["/Users/stagiaire_mobilosoft/Documents/Clean_Code_Mobilo/src/views/information/Resutlat.vue"],"sourcesContent":["<template>\n    <div class=\"custom-container\">\n        <br>\n        <Menu/>\n        <br>\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <Information_menu/>\n            </div>\n            <div class=\"col-8\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h3>Vos informations</h3>\n                        <hr>\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Titre</th>\n                                    <th>Contenu</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"item in informations\" :key=\"item.id\">\n                                    <td>{{ item.titre }}</td>\n                                    <td v-html=\"item.details\" style=\"width:500px;\"></td>\n                                    <td>\n                                        <button @click=\"openEditModal(item)\" class=\"btn m-2\"><i class=\"bi bi-pen-fill\"></i></button>\n                                        <button @click=\"deleteItem(item.id)\" class=\"btn\"><i class=\"bi bi-file-earmark-x-fill\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Modal pour l'édition -->\n        <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" aria-labelledby=\"editModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"editModalLabel\">Éditer l'information</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form @submit.prevent=\"updateInformation\">\n                            <div class=\"mb-3\">\n                                <label for=\"modalTitle\" class=\"form-label\">Titre</label>\n                                <input type=\"text\" v-model=\"currentItem.titre\" class=\"form-control\" id=\"modalTitle\" required/>\n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"quillEditorModal\" class=\"form-label\">Contenu</label>\n                                <div ref=\"quillEditorModal\" class=\"quill-editor\" style=\"height: 200px;\"></div>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">Enregistrer</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Menu from '@/components/Menu.vue';\nimport Information_menu from '@/components/information_menu/Information_menu.vue';\nimport { fetchData, deleteData, putData } from '@/service/apiService';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport * as bootstrap from 'bootstrap';\nexport default {\n    name: 'Resultat-information',\n    components: {\n        Information_menu,\n        Menu\n    },\n    data() {\n        return {\n            informations: [],\n            currentItem: null,\n            quillEditorModal: null\n        };\n    },\n    mounted() {\n        this.loadInformations();\n    },\n    methods: {\n        async loadInformations() {\n            try {\n                this.informations = await fetchData('/information/allInformation');\n            } catch (error) {\n                console.error('Erreur lors de la récupération des informations:', error);\n            }\n        },\n        openEditModal(item) {\n            this.currentItem = { ...item };\n            // Initialiser Quill lorsque le modal est ouvert\n            this.$nextTick(() => {\n                if (this.quillEditorModal) {\n                    this.quillEditorModal.destroy();\n                }\n                this.quillEditorModal = new Quill(this.$refs.quillEditorModal, {\n                    theme: 'snow',\n                    modules: {\n                        toolbar: [\n                            [{ header: [1, 2, 3, 4, 5, 6, false] }],\n                            [{ font: [] }],\n                            [{ align: [] }],\n                            ['bold', 'italic', 'underline', 'strike'],\n                            [{ color: [] }, { background: [] }],\n                            [{ script: 'sub' }, { script: 'super' }],\n                            [{ list: 'ordered' }, { list: 'bullet' }],\n                            [{ indent: '-1' }, { indent: '+1' }],\n                            [{ direction: 'rtl' }],\n                            ['link', 'image', 'video'],\n                            ['blockquote', 'code-block'],\n                            ['clean'], // remove formatting button\n                        ],\n                        table: true, // Enable table module\n                    },\n                });\n                // Charger le contenu dans l'éditeur\n                this.quillEditorModal.root.innerHTML = this.currentItem.details;\n                // Afficher le modal\n                const modal = new bootstrap.Modal(document.getElementById('editModal'));\n                modal.show();\n            });\n        },\n        async updateInformation() {\n            try {\n                const updatedDetails = this.quillEditorModal.root.innerHTML;\n                await putData(`/information/allInformation/${this.currentItem.id}`, {\n                    titre: this.currentItem.titre,\n                    details: updatedDetails\n                });\n                // Recharger les informations et fermer le modal\n                this.loadInformations();\n                const modal = bootstrap.Modal.getInstance(document.getElementById('editModal'));\n                modal.hide();\n            } catch (error) {\n                console.error('Erreur lors de la mise à jour des informations:', error);\n            }\n        },\n        async deleteItem(id) {\n            try {\n                await deleteData(`/information/d/${id}`);\n                this.loadInformations();\n            } catch (error) {\n                console.error('Erreur lors de la suppression des informations:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.custom-container {\n    max-width: 1600px;\n    padding-left: 15px;\n    padding-right: 15px;\n    margin-left: auto;\n    margin-right: auto;\n}\n@media (min-width: 576px) {\n    .custom-container {\n        padding-left: 24px;\n        padding-right: 24px;\n    }\n}\n\n@media (min-width: 768px) {\n    .custom-container {\n        padding-left: 32px;\n        padding-right: 32px;\n    }\n}\n\n@media (min-width: 992px) {\n    .custom-container {\n        padding-left: 40px;\n        padding-right: 40px;\n    }\n}\n\n@media (min-width: 1200px) {\n    .custom-container {\n        padding-left: 48px;\n        padding-right: 48px;\n    }\n}\n\n.card {\n    border-radius: 15px;\n}\nbutton {\n    border-radius: 10px;\n    background-color: #022D7E;\n    color: white;\n}\n.quill-editor {\n    border: 1px solid #ced4da;\n    border-radius: 0.25rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}