{"ast":null,"code":"import Menu from '@/components/Menu.vue';\nimport Information_menu from '@/components/information_menu/Information_menu.vue';\nimport { fetchData, deleteData } from '@/service/apiService';\nexport default {\n  name: 'Resultat-information',\n  components: {\n    Information_menu,\n    Menu\n  },\n  data() {\n    return {\n      informations: [] // Variable pour stocker les données récupérées\n    };\n  },\n  mounted() {\n    this.loadInformations();\n  },\n  methods: {\n    async loadInformations() {\n      try {\n        this.informations = await fetchData('/configuration/getInformations'); // Assurez-vous que le chemin est correct\n      } catch (error) {\n        console.error('Erreur lors de la récupération des informations:', error);\n      }\n    },\n    editItem(item) {\n      // Logique pour l'édition des informations\n      console.log('Éditer:', item);\n    },\n    async deleteItem(id) {\n      try {\n        await deleteData(`/configuration/delete/${id}`); // Assurez-vous que le chemin est correct\n        this.loadInformations(); // Recharger les informations après la suppression\n      } catch (error) {\n        console.error('Erreur lors de la suppression des informations:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Menu","Information_menu","fetchData","deleteData","name","components","data","informations","mounted","loadInformations","methods","error","console","editItem","item","log","deleteItem","id"],"sources":["/Users/stagiaire_mobilosoft/Documents/Clean_Code_Mobilo/src/views/information/Resutlat.vue"],"sourcesContent":["<template>\n    <div class=\"custom-container\">\n        <br>\n        <Menu/>\n        <br>\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <Information_menu/>\n            </div>\n            <div class=\"col-8\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h3>Vos informations</h3>\n                        <hr>\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Titre</th>\n                                    <th>Contenu</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"item in informations\" :key=\"item.id\">\n                                    <td>{{ item.titre }}</td>\n                                    <td v-html=\"item.details\" style=\"width:500px;\"></td>\n                                    <td>\n                                        <button @click=\"editItem(item)\" class=\"btn m-2\"><i class=\"bi bi-pen-fill\"></i></button>\n                                        <button @click=\"deleteItem(item.id)\" class=\"btn\"><i class=\"bi bi-file-earmark-x-fill\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Menu from '@/components/Menu.vue';\nimport Information_menu from '@/components/information_menu/Information_menu.vue';\nimport { fetchData, deleteData } from '@/service/apiService';\n\nexport default {\n    name: 'Resultat-information',\n    components: {\n        Information_menu,\n        Menu\n    },\n    data() {\n        return {\n            informations: []  // Variable pour stocker les données récupérées\n        };\n    },\n    mounted() {\n        this.loadInformations();\n    },\n    methods: {\n        async loadInformations() {\n            try {\n                this.informations = await fetchData('/configuration/getInformations'); // Assurez-vous que le chemin est correct\n            } catch (error) {\n                console.error('Erreur lors de la récupération des informations:', error);\n            }\n        },\n        editItem(item) {\n            // Logique pour l'édition des informations\n            console.log('Éditer:', item);\n        },\n        async deleteItem(id) {\n            try {\n                await deleteData(`/configuration/delete/${id}`); // Assurez-vous que le chemin est correct\n                this.loadInformations();  // Recharger les informations après la suppression\n            } catch (error) {\n                console.error('Erreur lors de la suppression des informations:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.custom-container {\n    max-width: 1600px;\n    padding-left: 15px;\n    padding-right: 15px;\n    margin-left: auto;\n    margin-right: auto;\n}\n@media (min-width: 576px) {\n    .custom-container {\n        padding-left: 24px;\n        padding-right: 24px;\n    }\n}\n\n@media (min-width: 768px) {\n    .custom-container {\n        padding-left: 32px;\n        padding-right: 32px;\n    }\n}\n\n@media (min-width: 992px) {\n    .custom-container {\n        padding-left: 40px;\n        padding-right: 40px;\n    }\n}\n\n@media (min-width: 1200px) {\n    .custom-container {\n        padding-left: 48px;\n        padding-right: 48px;\n    }\n}\n\n.card {\n    border-radius: 15px;\n}\nbutton {\n    border-radius: 10px;\n    background-color: #022D7E;\n    color: white;\n}\n</style>\n"],"mappings":"AAyCA,OAAOA,IAAG,MAAO,uBAAuB;AACxC,OAAOC,gBAAe,MAAO,oDAAoD;AACjF,SAASC,SAAS,EAAEC,UAAS,QAAS,sBAAsB;AAE5D,eAAe;EACXC,IAAI,EAAE,sBAAsB;EAC5BC,UAAU,EAAE;IACRJ,gBAAgB;IAChBD;EACJ,CAAC;EACDM,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,EAAC,CAAG;IACtB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,gBAAgBA,CAAA,EAAG;MACrB,IAAI;QACA,IAAI,CAACF,YAAW,GAAI,MAAML,SAAS,CAAC,gCAAgC,CAAC,EAAE;MAC3E,EAAE,OAAOS,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MAC5E;IACJ,CAAC;IACDE,QAAQA,CAACC,IAAI,EAAE;MACX;MACAF,OAAO,CAACG,GAAG,CAAC,SAAS,EAAED,IAAI,CAAC;IAChC,CAAC;IACD,MAAME,UAAUA,CAACC,EAAE,EAAE;MACjB,IAAI;QACA,MAAMd,UAAU,CAAC,yBAAyBc,EAAE,EAAE,CAAC,EAAE;QACjD,IAAI,CAACR,gBAAgB,CAAC,CAAC,EAAG;MAC9B,EAAE,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MAC3E;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}