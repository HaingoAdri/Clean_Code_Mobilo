{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"card-body\"\n};\nconst _hoisted_3 = {\n  class: \"blockquote mb-0\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createStaticVNode(\"<div class=\\\"card-header rounded-bottom rounded-4 d-flex justify-content-between\\\" data-v-bad49abc><h3 class=\\\"py-2\\\" data-v-bad49abc>Meta description actuelle</h3><div class=\\\"a\\\" data-v-bad49abc><button class=\\\"btn m-2\\\" data-v-bad49abc><i class=\\\"bi bi-pen-fill\\\" data-v-bad49abc></i></button><button class=\\\"btn\\\" data-v-bad49abc><i class=\\\"bi bi-file-earmark-x-fill\\\" data-v-bad49abc></i></button></div></div>\", 1)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"blockquote\", _hoisted_3, [$data.metaData ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.metaData.description), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Aucune description disponible pour ce type.\"))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createStaticVNode","_createElementVNode","_hoisted_2","_hoisted_3","$data","metaData","_hoisted_4","_toDisplayString","description","_hoisted_5"],"sources":["/Users/stagiaire_mobilosoft/Documents/Clean_Code_Mobilo/src/components/configuration_reponse/Meta_descriptionReponse.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class=\"card-header rounded-bottom rounded-4 d-flex justify-content-between\">\n            <h3 class=\"py-2\">Meta description actuelle</h3>\n            <div class=\"a\">\n                <button class=\"btn m-2\"><i class=\"bi bi-pen-fill\"></i></button>\n                <button class=\"btn\"><i class=\"bi bi-file-earmark-x-fill\"></i></button>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <blockquote class=\"blockquote mb-0\">\n                <p v-if=\"metaData\">{{ metaData.description }}</p>\n                <p v-else>Aucune description disponible pour ce type.</p>\n            </blockquote>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { fetchData } from '@/service/apiService';\n\nexport default {\n    name: 'Meta_descriptionReponse',\n    props: {\n        types: {\n            type: String,\n            required: true\n        }\n    },\n    data() {\n        return {\n            metaData: null\n        };\n    },\n    mounted() {\n        this.fetchMetaDescription();\n    },\n    methods: {\n        async fetchMetaDescription() {\n            try {\n                const response = await fetchData(`/configuration/search?name=${encodeURIComponent(this.types)}`);\n                if (response) {\n                    this.metaData = response; // Assurez-vous que `response` contient un objet avec une `description`\n                }\n            } catch (error) {\n                console.error('Erreur lors de la récupération des données:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.card {\n    border-radius: 15px;\n}\n.card-header {\n    background-color: #022D7E;\n    color: white;\n}\nbutton {\n    background-color: #28aabb;\n    color: white;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EAQRA,KAAK,EAAC;AAAW;;EACNA,KAAK,EAAC;AAAiB;;EAV/CC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAcM,OAdNC,UAcM,G,0BAfVC,kBAAA,waASQC,mBAAA,CAKM,OALNC,UAKM,GAJFD,mBAAA,CAGa,cAHbE,UAGa,GAFAC,KAAA,CAAAC,QAAQ,I,cAAjBP,mBAAA,CAAiD,KAXjEQ,UAAA,EAAAC,gBAAA,CAWsCH,KAAA,CAAAC,QAAQ,CAACG,WAAW,qB,cAC1CV,mBAAA,CAAyD,KAZzEW,UAAA,EAY0B,6CAA2C,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}