{"ast":null,"code":"import Menu from '@/components/Menu.vue';\nimport Information_menu from '@/components/information_menu/Information_menu.vue';\nimport { fetchData, deleteData, putData } from '@/service/apiService';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'Resultat-information',\n  components: {\n    Information_menu,\n    Menu\n  },\n  data() {\n    return {\n      informations: [],\n      // Variable pour stocker les données récupérées\n      editForm: {\n        id: null,\n        titre: '',\n        details: ''\n      },\n      quillEditor: null\n    };\n  },\n  mounted() {\n    this.loadInformations();\n    this.initializeQuill();\n  },\n  methods: {\n    async loadInformations() {\n      try {\n        this.informations = await fetchData('/information/allInformation'); // Assurez-vous que le chemin est correct\n      } catch (error) {\n        console.error('Erreur lors de la récupération des informations:', error);\n      }\n    },\n    editItem(item) {\n      this.editForm = {\n        ...item\n      };\n      if (this.quillEditor) {\n        this.quillEditor.root.innerHTML = item.details;\n      }\n      const modalElement = document.getElementById('editModal');\n      const modal = new bootstrap.Modal(modalElement);\n      modal.show();\n    },\n    async updateItem() {\n      try {\n        await putData(`/information/update_inforamation/${this.editForm.id}`, {\n          titre: this.editForm.titre,\n          details: this.quillEditor.root.innerHTML\n        });\n        this.loadInformations(); // Recharger les informations après la mise à jour\n        const modalElement = document.getElementById('editModal');\n        const modal = bootstrap.Modal.getInstance(modalElement);\n        modal.hide();\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour des informations:', error);\n      }\n    },\n    async deleteItem(id) {\n      try {\n        await deleteData(`/information/delete_information/${id}`); // Assurez-vous que le chemin est correct\n        this.loadInformations(); // Recharger les informations après la suppression\n      } catch (error) {\n        console.error('Erreur lors de la suppression des informations:', error);\n      }\n    },\n    initializeQuill() {\n      this.quillEditor = new Quill(this.$refs.quillEditor, {\n        theme: 'snow',\n        modules: {\n          toolbar: [[{\n            header: [1, 2, 3, 4, 5, 6, false]\n          }], [{\n            font: []\n          }], [{\n            align: []\n          }], ['bold', 'italic', 'underline', 'strike'], [{\n            color: []\n          }, {\n            background: []\n          }], [{\n            script: 'sub'\n          }, {\n            script: 'super'\n          }], [{\n            list: 'ordered'\n          }, {\n            list: 'bullet'\n          }], [{\n            indent: '-1'\n          }, {\n            indent: '+1'\n          }], [{\n            direction: 'rtl'\n          }], ['link', 'image', 'video'], ['blockquote', 'code-block'], ['clean'] // remove formatting button\n          ],\n          table: true // Enable table module\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Menu","Information_menu","fetchData","deleteData","putData","Quill","bootstrap","name","components","data","informations","editForm","id","titre","details","quillEditor","mounted","loadInformations","initializeQuill","methods","error","console","editItem","item","root","innerHTML","modalElement","document","getElementById","modal","Modal","show","updateItem","getInstance","hide","deleteItem","$refs","theme","modules","toolbar","header","font","align","color","background","script","list","indent","direction","table"],"sources":["/Users/stagiaire_mobilosoft/Documents/Clean_Code_Mobilo/src/views/information/Resutlat.vue"],"sourcesContent":["<template>\n    <div class=\"custom-container\">\n        <br>\n        <Menu/>\n        <br>\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <Information_menu/>\n            </div>\n            <div class=\"col-8\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h3>Vos informations</h3>\n                        <hr>\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Titre</th>\n                                    <th>Contenu</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"item in informations\" :key=\"item.id\">\n                                    <td>{{ item.titre }}</td>\n                                    <td v-html=\"item.details\" style=\"width:500px;\"></td>\n                                    <td>\n                                        <button @click=\"editItem(item)\" class=\"btn m-2\"><i class=\"bi bi-pen-fill\"></i></button>\n                                        <button @click=\"deleteItem(item.id)\" class=\"btn\"><i class=\"bi bi-file-earmark-x-fill\"></i></button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Modal for Editing Information -->\n        <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" aria-labelledby=\"editModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"editModalLabel\">Éditer l'information</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form @submit.prevent=\"updateItem\">\n                            <div class=\"mb-3\">\n                                <label for=\"modalTitle\" class=\"form-label\">Titre</label>\n                                <input type=\"text\" v-model=\"editForm.titre\" class=\"form-control\" id=\"modalTitle\" required />\n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"quillEditor\" class=\"form-label\">Contenu</label>\n                                <div ref=\"quillEditor\" class=\"quill-editor\" style=\"height: 200px;\"></div>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">Enregistrer</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Menu from '@/components/Menu.vue';\nimport Information_menu from '@/components/information_menu/Information_menu.vue';\nimport { fetchData, deleteData, putData } from '@/service/apiService';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport * as bootstrap from 'bootstrap';\nexport default {\n    name: 'Resultat-information',\n    components: {\n        Information_menu,\n        Menu\n    },\n    data() {\n        return {\n            informations: [],  // Variable pour stocker les données récupérées\n            editForm: {\n                id: null,\n                titre: '',\n                details: ''\n            },\n            quillEditor: null\n        };\n    },\n    mounted() {\n        this.loadInformations();\n        this.initializeQuill();\n    },\n    methods: {\n        async loadInformations() {\n            try {\n                this.informations = await fetchData('/information/allInformation'); // Assurez-vous que le chemin est correct\n            } catch (error) {\n                console.error('Erreur lors de la récupération des informations:', error);\n            }\n        },\n        editItem(item) {\n            this.editForm = { ...item };\n            if (this.quillEditor) {\n                this.quillEditor.root.innerHTML = item.details;\n            }\n            const modalElement = document.getElementById('editModal');\n            const modal = new bootstrap.Modal(modalElement);\n            modal.show();\n        },\n        async updateItem() {\n            try {\n                await putData(`/information/update_inforamation/${this.editForm.id}`, {\n                    titre: this.editForm.titre,\n                    details: this.quillEditor.root.innerHTML\n                });\n                this.loadInformations();  // Recharger les informations après la mise à jour\n                const modalElement = document.getElementById('editModal');\n                const modal = bootstrap.Modal.getInstance(modalElement);\n                modal.hide();\n            } catch (error) {\n                console.error('Erreur lors de la mise à jour des informations:', error);\n            }\n        },\n        async deleteItem(id) {\n            try {\n                await deleteData(`/information/delete_information/${id}`); // Assurez-vous que le chemin est correct\n                this.loadInformations();  // Recharger les informations après la suppression\n            } catch (error) {\n                console.error('Erreur lors de la suppression des informations:', error);\n            }\n        },\n        initializeQuill() {\n            this.quillEditor = new Quill(this.$refs.quillEditor, {\n                theme: 'snow',\n                modules: {\n                    toolbar: [\n                        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n                        [{ font: [] }],\n                        [{ align: [] }],\n                        ['bold', 'italic', 'underline', 'strike'],\n                        [{ color: [] }, { background: [] }],\n                        [{ script: 'sub' }, { script: 'super' }],\n                        [{ list: 'ordered' }, { list: 'bullet' }],\n                        [{ indent: '-1' }, { indent: '+1' }],\n                        [{ direction: 'rtl' }],\n                        ['link', 'image', 'video'],\n                        ['blockquote', 'code-block'],\n                        ['clean'] // remove formatting button\n                    ],\n                    table: true // Enable table module\n                }\n            });\n        }\n    }\n};\n</script>\n\n<style scoped>\n.custom-container {\n    max-width: 1600px;\n    padding-left: 15px;\n    padding-right: 15px;\n    margin-left: auto;\n    margin-right: auto;\n}\n@media (min-width: 576px) {\n    .custom-container {\n        padding-left: 24px;\n        padding-right: 24px;\n    }\n}\n@media (min-width: 768px) {\n    .custom-container {\n        padding-left: 32px;\n        padding-right: 32px;\n    }\n}\n@media (min-width: 992px) {\n    .custom-container {\n        padding-left: 40px;\n        padding-right: 40px;\n    }\n}\n@media (min-width: 1200px) {\n    .custom-container {\n        padding-left: 48px;\n        padding-right: 48px;\n    }\n}\n.card {\n    border-radius: 15px;\n}\nbutton {\n    border-radius: 10px;\n    background-color: #022D7E;\n    color: white;\n}\n.quill-editor {\n    border: 1px solid #ddd;\n    border-radius: 4px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}