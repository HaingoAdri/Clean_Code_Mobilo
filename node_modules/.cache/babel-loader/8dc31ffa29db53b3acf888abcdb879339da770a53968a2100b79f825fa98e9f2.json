{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MenuVue from '@/components/Menu.vue';\nimport Endpoints_menuVue from '@/components/endpoints_menu/Endpoints_menu.vue';\nimport Header_vue from '../../components/endpoints_menu/reponse/Header_reponse.vue';\nimport { fetchData, postData } from '@/service/apiService';\nexport default {\n  name: 'Endpoints_categorie',\n  components: {\n    MenuVue,\n    Endpoints_menuVue,\n    Header_vue\n  },\n  data() {\n    return {\n      lignes: [{\n        categorie: '',\n        nom: '',\n        url: '',\n        description: ''\n      }],\n      information: []\n    };\n  },\n  mounted() {\n    this.fetchSearchInformation();\n  },\n  methods: {\n    ajouterLigne() {\n      this.lignes.push({\n        categorie: '',\n        nom: '',\n        url: '',\n        description: ''\n      });\n    },\n    supprimerLigne(index) {\n      this.lignes.splice(index, 1);\n    },\n    async fetchSearchInformation() {\n      try {\n        const response = await fetchData(`/sous_categorie/allSous_categorie`);\n        if (response) {\n          this.information = response;\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["MenuVue","Endpoints_menuVue","Header_vue","fetchData","postData","name","components","data","lignes","categorie","nom","url","description","information","mounted","fetchSearchInformation","methods","ajouterLigne","push","supprimerLigne","index","splice","response","error","console"],"sources":["/Users/eva_smartelia/Documents/Clean_Code_Mobilo/src/views/endpoints/Header_vue.vue"],"sourcesContent":["<template>\n    <div class=\"custom-container\">\n        <br>\n        <MenuVue/>\n        <br>\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <Endpoints_menuVue/>\n            </div>\n            <div class=\"col-8\">\n                <div class=\"card overflow-auto\" style=\"height: 350px;\">\n                    <div class=\"card-body\">\n                        <h3>Corps des sous catégories d'enpoints ici (Body)</h3>\n                        <hr>\n                        <form class=\"row g-3\">\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th>Sous sategorie</th>\n                                        <th>Nom</th>\n                                        <th>Type</th>\n                                        <th>Description</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(ligne, index) in lignes\" :key=\"index\">\n                                        <td>\n                                            <select class=\"form-control\" v-model=\"ligne.categorie\">\n                                                <option v-for=\"item in information\" :key=\"item.id\" :value=\"item.id\">{{item.nom}}</option>\n                                            </select>\n                                        </td>\n                                        <td>\n                                            <input type=\"text\" class=\"form-control\" v-model=\"ligne.nom\" placeholder=\"Exemple: Connexion user\"/>\n                                        </td>\n                                        <td>\n                                            <input type=\"text\" class=\"form-control\" v-model=\"ligne.url\" placeholder=\"Exemple: /connexion/user\"/>\n                                        </td>\n                                        <td>\n                                            <textarea type=\"text\" class=\"form-control\" v-model=\"ligne.description\" placeholder=\"Exemple: FR\"></textarea>\n                                        </td>\n                                        <td>\n                                            <button type=\"button\" class=\"btn btn-danger btn-sm\" @click=\"supprimerLigne(index)\">Supprimer</button>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <div class=\"d-flex justify-content-between\">\n                                <div class=\"\">\n                                    <button type=\"button\" class=\"btn bt\" @click=\"ajouterLigne\">Ajouter une ligne</button>\n                                </div>\n                                <div class=\"\">\n                                    <button type=\"submit\" class=\"btn bt\">Enregistrer</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <br>\n        <Header_vue/>\n    </div>\n</template>\n\n<script>\nimport MenuVue from '@/components/Menu.vue';\nimport Endpoints_menuVue from '@/components/endpoints_menu/Endpoints_menu.vue';\nimport Header_vue from '../../components/endpoints_menu/reponse/Header_reponse.vue';\nimport { fetchData, postData } from '@/service/apiService';\nexport default {\n    name: 'Endpoints_categorie',\n    components: {\n        MenuVue,\n        Endpoints_menuVue,\n        Header_vue\n    },\n    data() {\n        return {\n            lignes: [\n                { categorie: '', nom: '', url: '', description: ''}\n            ],\n            information: [],\n        };\n    },\n    mounted() {\n        this.fetchSearchInformation();\n    },\n    methods: {\n        ajouterLigne() {\n            this.lignes.push({ categorie: '', nom: '', url: '', description: ''});\n        },\n        supprimerLigne(index) {\n            this.lignes.splice(index, 1);\n        },\n        async fetchSearchInformation() {\n            try {\n                const response = await fetchData(`/sous_categorie/allSous_categorie`);\n                if (response) {\n                    this.information = response;\n                }\n            } catch (error) {\n                console.error('Erreur lors de la récupération des données:', error);\n            }\n        },\n    }\n}\n</script>\n\n<style scoped>\n.custom-container {\n  max-width: 1600px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n}\n@media (min-width: 576px) {\n  .custom-container {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n}\n\n@media (min-width: 768px) {\n  .custom-container {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n}\n\n@media (min-width: 992px) {\n  .custom-container {\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n}\n\n@media (min-width: 1200px) {\n  .custom-container {\n    padding-left: 48px;\n    padding-right: 48px;\n  }\n}\n\n.card {\n    border-radius: 15px;\n}\n.bt {\n    border-radius: 10px;\n    background-color: #022D7E;\n    color: white;\n}\n</style>\n"],"mappings":";AAkEA,OAAOA,OAAM,MAAO,uBAAuB;AAC3C,OAAOC,iBAAgB,MAAO,gDAAgD;AAC9E,OAAOC,UAAS,MAAO,4DAA4D;AACnF,SAASC,SAAS,EAAEC,QAAO,QAAS,sBAAsB;AAC1D,eAAe;EACXC,IAAI,EAAE,qBAAqB;EAC3BC,UAAU,EAAE;IACRN,OAAO;IACPC,iBAAiB;IACjBC;EACJ,CAAC;EACDK,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,CACJ;QAAEC,SAAS,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAE,EACrD;MACDC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,sBAAsB,CAAC,CAAC;EACjC,CAAC;EACDC,OAAO,EAAE;IACLC,YAAYA,CAAA,EAAG;MACX,IAAI,CAACT,MAAM,CAACU,IAAI,CAAC;QAAET,SAAS,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAE,CAAC,CAAC;IACzE,CAAC;IACDO,cAAcA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACZ,MAAM,CAACa,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAChC,CAAC;IACD,MAAML,sBAAsBA,CAAA,EAAG;MAC3B,IAAI;QACA,MAAMO,QAAO,GAAI,MAAMnB,SAAS,CAAC,mCAAmC,CAAC;QACrE,IAAImB,QAAQ,EAAE;UACV,IAAI,CAACT,WAAU,GAAIS,QAAQ;QAC/B;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACvE;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}